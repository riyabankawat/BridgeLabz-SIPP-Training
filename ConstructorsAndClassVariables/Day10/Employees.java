// Superclass: Employeeclass Employee {    public int employeeID;         // public    protected String department;   // protected    private double salary;         // private    // Constructor    public Employee(int employeeID, String department, double salary) {        this.employeeID = employeeID;        this.department = department;        this.salary = salary;    }    // Public method to set salary    public void setSalary(double salary) {        if (salary >= 0) {            this.salary = salary;        } else {            System.out.println("Invalid salary amount");        }    }    // Public method to get salary    public double getSalary() {        return salary;    }    // Display Employee Details    public void displayEmployeeDetails() {        System.out.println("Employee ID: " + employeeID);        System.out.println("Department: " + department);        System.out.println("Salary: $" + salary);    }}// Subclass: Managerclass Manager extends Employee {    private int teamSize;    // Constructor    public Manager(int employeeID, String department, double salary, int teamSize) {        super(employeeID, department, salary);        this.teamSize = teamSize;    }    // Display Manager Details    public void displayManagerDetails() {        // Accessing public employeeID directly        System.out.println("Manager Employee ID: " + employeeID);        // Accessing protected department directly        System.out.println("Department: " + department);        // Accessing private salary via public getter        System.out.println("Salary: $" + getSalary());        System.out.println("Team Size: " + teamSize);    }}// Main class to testpublic class Main {    public static void main(String[] args) {        // Creating Employee object        Employee emp = new Employee(1001, "IT", 55000);        emp.displayEmployeeDetails();        System.out.println();        // Modify salary        emp.setSalary(60000);        System.out.println("Updated Salary: $" + emp.getSalary());        System.out.println();        // Creating Manager object        Manager mgr = new Manager(2001, "HR", 75000, 10);        mgr.displayManagerDetails();    }}